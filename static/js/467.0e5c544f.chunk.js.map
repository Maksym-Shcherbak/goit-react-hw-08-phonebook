{"version":3,"file":"static/js/467.0e5c544f.chunk.js","mappings":"4MACA,GAAgB,UAAY,6BAA6B,IAAM,uBAAuB,SAAW,4BAA4B,UAAY,6BAA6B,MAAQ,yBAAyB,eAAiB,kCAAkC,IAAM,uBAAuB,QAAU,2BAA2B,OAAS,0BAA0B,KAAO,yB,8BCSlWA,GAAU,EACDC,EAAwB,WAC9BD,GAIHA,GAAU,EAVFE,SAASC,eAAe,OAChCC,aAAa,OAAQ,cANbF,SAASC,eAAe,OAChCC,aAAa,OAAQ,QAYrBJ,GAAU,EAKb,E,SCVYK,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OAYE,iBAAMC,UAAWC,EAAAA,UAAeC,SAxBb,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfR,GACES,EAAAA,EAAAA,IAAW,CACTC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAcyDC,aAAa,MAArE,UAEE,iBAAKb,UAAWC,EAAAA,IAAhB,WAEE,iBAAKD,UAAWC,EAAAA,SAAhB,WACE,wBAAI,YAEJ,uBAAG,iDAEL,mBACA,iBAAKD,UAAWC,EAAAA,SAAhB,WAEE,iBAAMD,UAAWC,EAAAA,UAAjB,UACE,SAAC,cAAD,CAAsBS,MAAO,CAAEI,KAAM,IAArC,UACE,SAAC,MAAD,SAIJ,kBACEd,UAAWC,EAAAA,eACXc,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,YAAY,YACZC,UAAQ,KAEV,mBAEA,iBAAMnB,UAAWC,EAAAA,UAAjB,UACE,SAAC,cAAD,CAAsBS,MAAO,CAAEI,KAAM,IAArC,UACE,SAAC,MAAD,SAIJ,kBACEd,UAAWC,EAAAA,eACXe,KAAK,WACLE,YAAY,WACZH,GAAG,MACHE,KAAK,WACLE,UAAQ,KAGV,2BACE,mBACEnB,UAAWC,EAAAA,MACX,cAAY,OACZe,KAAK,SACLI,QAAS3B,EAJX,UAME,SAAC,cAAD,CAAsBiB,MAAO,CAAEI,KAAM,IAArC,UACE,SAAC,MAAD,WAIN,mBAEA,mBAAQd,UAAS,UAAKC,EAAAA,IAAL,YAAgBA,EAAAA,OAAae,KAAK,SAAnD,SAA4D,kBAOrE,EC1FD,EARc,WACZ,OACE,0BACE,SAACnB,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","helpers/showPassword.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"LoginForm_loginForm__+koOR\",\"con\":\"LoginForm_con__CDlLS\",\"headForm\":\"LoginForm_headForm__FJrWO\",\"inputItem\":\"LoginForm_inputItem__QCApq\",\"faEye\":\"LoginForm_faEye__XnmE2\",\"loginFormInput\":\"LoginForm_loginFormInput__15CeX\",\"btn\":\"LoginForm_btn__B2KLK\",\"submits\":\"LoginForm_submits__T+8iU\",\"signUp\":\"LoginForm_signUp__R-Qn9\",\"ani9\":\"LoginForm_ani9__2a9PX\"};","const show = () => {\n  const p = document.getElementById('pwd');\n  p.setAttribute('type', 'text');\n};\n\nconst hide = () => {\n  const p = document.getElementById('pwd');\n  p.setAttribute('type', 'password');\n};\n\nlet pwShown = false;\nexport const togglePasswordVisible = () => {\n  if (!pwShown) {\n    show();\n    pwShown = true;\n  } else {\n    pwShown = false;\n    hide();\n  }\n};\n","import { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/authOperations';\nimport css from './LoginForm.module.css';\nimport { IconContext } from 'react-icons';\nimport { FaKey } from 'react-icons/fa';\nimport { IoIosMail } from 'react-icons/io';\nimport { FaEye } from 'react-icons/fa';\nimport { togglePasswordVisible } from 'helpers/showPassword';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      loginThunk({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    // <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n    //   <label className={css.label}>\n    //     Email\n    //     <input type=\"email\" name=\"email\" />\n    //   </label>\n    //   <label className={css.label}>\n    //     Password\n    //     <input type=\"password\" name=\"password\" />\n    //   </label>\n    //   <button type=\"submit\">Log In</button>\n    // </form>\n    <form className={css.loginForm} onSubmit={handleSubmit} autoComplete=\"off\">\n      {/* con = Container for items in the form */}\n      <div className={css.con}>\n        {/* Start header Content */}\n        <div className={css.headForm}>\n          <h2>Log In</h2>\n          {/* A welcome message or an explanation of the login form */}\n          <p>login here using your email and password</p>\n        </div>\n        <br />\n        <div className={css.fieldSet}>\n          {/* user name */}\n          <span className={css.inputItem}>\n            <IconContext.Provider value={{ size: 16 }}>\n              <IoIosMail />\n            </IconContext.Provider>\n          </span>\n          {/* user name Input */}\n          <input\n            className={css.loginFormInput}\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"@UserName\"\n            required\n          />\n          <br />\n          {/* Password */}\n          <span className={css.inputItem}>\n            <IconContext.Provider value={{ size: 16 }}>\n              <FaKey />\n            </IconContext.Provider>\n          </span>\n          {/* Password Input */}\n          <input\n            className={css.loginFormInput}\n            type=\"password\"\n            placeholder=\"Password\"\n            id=\"pwd\"\n            name=\"password\"\n            required\n          />\n          {/* Show/hide password */}\n          <span>\n            <button\n              className={css.faEye}\n              aria-hidden=\"true\"\n              type=\"button\"\n              onClick={togglePasswordVisible}\n            >\n              <IconContext.Provider value={{ size: 16 }}>\n                <FaEye />\n              </IconContext.Provider>\n            </button>\n          </span>\n          <br />\n          {/* button LogIn */}\n          <button className={`${css.btn} ${css.logIn}`} type=\"submit\">\n            Log In\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["pwShown","togglePasswordVisible","document","getElementById","setAttribute","LoginForm","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","currentTarget","loginThunk","email","elements","value","password","reset","autoComplete","size","id","type","name","placeholder","required","onClick"],"sourceRoot":""}